
/* Universal Safe Area Variables - CSS-First Approach */
:root {
  /* Native CSS environment variables as primary source */
  --safe-area-inset-top: env(safe-area-inset-top, 0px);
  --safe-area-inset-bottom: env(safe-area-inset-bottom, 0px);
  --safe-area-inset-left: env(safe-area-inset-left, 0px);
  --safe-area-inset-right: env(safe-area-inset-right, 0px);
  
  /* JavaScript-calculated fallback values */
  --safe-area-fallback: 48px;
  --safe-area-bottom-fallback: 12px;
  --safe-area-left-fallback: 8px;
  --safe-area-right-fallback: 8px;
  
  /* Universal safe area values using CSS max() for progressive enhancement */
  --safe-area-top: max(var(--safe-area-inset-top), var(--safe-area-fallback));
  --safe-area-bottom: max(var(--safe-area-inset-bottom), var(--safe-area-bottom-fallback));
  --safe-area-left: max(var(--safe-area-inset-left), var(--safe-area-left-fallback));
  --safe-area-right: max(var(--safe-area-inset-right), var(--safe-area-right-fallback));
  
  /* App-specific variables */
  --nav-bar-height: 4rem;
  --keyboard-height: 0px;
}

/* Keyboard state management - simplified */
.keyboard-visible {
  --effective-safe-area-bottom: 0px;
}

/* Universal safe area utilities - single source of truth */
.safe-area-top {
  padding-top: var(--safe-area-top) !important;
}

.safe-area-bottom {
  padding-bottom: var(--safe-area-bottom) !important;
}

.safe-area-left {
  padding-left: var(--safe-area-left) !important;
}

.safe-area-right {
  padding-right: var(--safe-area-right) !important;
}

/* Mobile container base styles */
.mobile-container {
  min-height: 100vh;
  min-height: 100dvh;
  box-sizing: border-box;
  overflow-x: hidden;
  position: relative;
}

/* Apply safe areas to main app containers */
.smart-chat-container,
.journal-container,
.insights-container,
.settings-container {
  @apply safe-area-top safe-area-left safe-area-right mobile-container;
}
