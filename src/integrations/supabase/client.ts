
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://kwnwhgucnzqxndzjayyq.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt3bndoZ3VjbnpxeG5kempheXlxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIzMzk4ODMsImV4cCI6MjA1NzkxNTg4M30.UAB3e5b44iJa9kKT391xyJKoQmlUOtsAi-yp4UEqZrc";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  global: {
    fetch: (url, options) => {
      const fetchOptions = options || {};
      const headers = new Headers(fetchOptions.headers);
      
      // Add client version for feature detection
      headers.set('x-client-version', '1.1.0');
      headers.set('x-chunking-enabled', 'true');
      
      return fetch(url, { 
        ...fetchOptions,
        headers 
      });
    }
  }
});

// Helper function to check if chunking is supported on the server
export async function isChunkingSupported(): Promise<boolean> {
  try {
    // Check if the journal_chunks table exists
    // Using a direct SQL query instead of rpc since table_exists is not in the types
    const { data, error } = await supabase
      .from('journal_chunks')
      .select('id')
      .limit(1);
    
    if (error) {
      console.error('Error checking if chunking is supported:', error);
      return false;
    }
    
    return true;
  } catch (error) {
    console.error('Exception checking if chunking is supported:', error);
    return false;
  }
}
