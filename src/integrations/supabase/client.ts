
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://kwnwhgucnzqxndzjayyq.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt3bndoZ3VjbnpxeG5kempheXlxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIzMzk4ODMsImV4cCI6MjA1NzkxNTg4M30.UAB3e5b44iJa9kKT391xyJKoQmlUOtsAi-yp4UEqZrc";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create a singleton instance with proper storage configuration
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'implicit',
  },
  global: {
    headers: {
      'x-client-info': 'Feelosophy App'
    },
  },
  db: {
    schema: 'public'
  },
  realtime: {
    timeout: 10000, // 10s
  }
});

// Simple function to check if Supabase is reachable
export const checkSupabaseConnection = async () => {
  try {
    const start = Date.now();
    console.log('Testing Supabase connection...');
    
    const { data, error } = await supabase
      .from('profiles')
      .select('id')
      .limit(1);
    
    const duration = Date.now() - start;
    
    if (error) {
      console.error('Supabase connection test failed:', error);
      return { success: false, error: error.message, duration };
    }
    
    console.log(`Supabase connection successful (${duration}ms)`);
    return { success: true, duration, data };
  } catch (err) {
    console.error('Supabase connection error:', err);
    return { success: false, error: err instanceof Error ? err.message : 'Unknown error', duration: -1 };
  }
};
